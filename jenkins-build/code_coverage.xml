<?xml version="1.0"?>

<!-- Works with Ant 1.7.0 and higher -->
<project basedir=".">
    <!-- Step 1: clean the instrumented workspace -->
    <target name="code_coverage_reporting_preparation" depends="install_istanbul">

            <make-clean-dir dir="${code.coverage.instrumented.workspace.temp}" />
            <make-clean-dir dir="${code.coverage.report.dir}" />
            <make-clean-dir dir="${code.coverage.instrumented.workspace}" />
            <copy todir="${code.coverage.instrumented.workspace}">
                <fileset dir="${WORKSPACE}" />
            </copy>

            <copy todir="${code.coverage.instrumented.workspace}/${servoy.test_solution_name}">
                <fileset dir="${LIB-DIR}">
                    <include name="scopes.codeCoverageReporting.js" />
                </fileset>
                <globmapper from="scopes.codeCoverageReporting.js" to="codeCoverageReporting.js"/>
            </copy>
            <exec executable="node" failonerror="true">
                <arg value="${LIB-DIR}/servoyIstanbulInstrumentCleaner.js" />
                <arg value="${code.coverage.instrumented.workspace}" />
            </exec>
    </target>

    <!-- Step 2: instrument all code from workspace into the temp instrumented workspace-->
    <target name="code_coverage_instrument_workspace">
        <echo level="info" message="instrumenting ${servoy.solution_under_testing} into ${code.coverage.instrumented.workspace.temp}"/>
        <exec executable="istanbul.cmd" dir="${TOOLS-DIR}" osfamily="windows" failonerror="true">
            <arg value="instrument"/>
            <arg value="${code.coverage.instrumented.workspace}"/>
            <arg value="--output"/>
            <arg value="${code.coverage.instrumented.workspace.temp}"/>
            <arg value="--preserve-comments"/>
            <arg value="--no-compact"/>
            <arg value="--save-baseline"/>
            <arg value="--baseline-file"/>
            <arg value="${code.coverage.report.dir}/coverage-baseline.json"/>
        </exec>
        <exec executable="istanbul" dir="${TOOLS-DIR}" osfamily="unix" failonerror="true">
            <arg value="instrument"/>
            <arg value="${WORKSPACE}"/>
            <arg value="--output"/>
            <arg value="${code.coverage.instrumented.workspace.temp}"/>
            <arg value="--preserve-comments"/>
            <arg value="--no-compact"/>
            <arg value="--save-baseline"/>
            <arg value="--baseline-file"/>
            <arg value="${code.coverage.report.dir}/coverage-baseline.json"/>
        </exec>
    </target>

    <!-- Step 3: parse all the instrumented code from the temp instrumented workspace and save the modified instrumented file into the instrumented workspace-->
    <target name="code_coverage_fix_instrumented_workspace_for_servoy">
        <echo level="info" message="node ${LIB-DIR}/servoyCodeCoverageInstrumentationFixer.js --d ${code.coverage.instrumented.workspace} ${code.coverage.instrumented.workspace.temp} --tsp ${code.coverage.instrumented.workspace}/${servoy.test_solution_name} --rp ${code.coverage.report.dir} --i ${code.coverage.instrument.include} --x ${code.coverage.instrument.exclude} --e true --v false" />
        <echo level="info" message="Processing instrumented code from ${code.coverage.instrumented.workspace.temp} to ${code.coverage.instrumented.workspace}, fixing Servoy incompatibilities"/>
        <exec executable="node" failonerror="true">
            <arg value="${LIB-DIR}/servoyCodeCoverageInstrumentationFixer.js"/>
            <arg value="--d"/>
            <arg value="${code.coverage.instrumented.workspace}"/>
            <arg value="${code.coverage.instrumented.workspace.temp}"/>
            <arg value="--tsp"/>
            <arg value="${code.coverage.instrumented.workspace}/${servoy.test_solution_name}"/>
            <arg value="--rp"/>
            <arg value="${code.coverage.report.dir}"/>
            <arg value="--i"/>
            <arg value="${code.coverage.instrument.include}"/>
            <arg value="--x"/>
            <arg value="${code.coverage.instrument.exclude}"/>
            <arg value="--e"/>
            <arg value="true"/>
            <arg value="--v"/>
            <arg value="false"/>
        </exec>
    </target>

    <!-- Generate Code Coverage reports after the tests have run -->
    <target name="generate_code_coverage_reports" unless="test.failed">
        <for list="${code.coverage.report-formats}" param="format">
          <sequential>
            <echo level="info" message="Generating @{format} report"/>
            <exec executable="istanbul.cmd" dir="${TOOLS-DIR}" osfamily="windows" failonerror="true">
                <arg value="report" />
                <arg value="--root" />
                <arg value="${code.coverage.report.dir}" />
                <arg value="--dir" />
                <arg value="${code.coverage.report.dir}" />
                <arg value="@{format}" />
            </exec>
            <exec executable="istanbul" dir="${TOOLS-DIR}" osfamily="unix" failonerror="true">
                <arg value="report" />
                <arg value="--root" />
                <arg value="${code.coverage.report.dir}" />
                <arg value="--dir" />
                <arg value="${code.coverage.report.dir}" />
                <arg value="@{format}" />
            </exec>
          </sequential>
        </for>
    </target>

    <!-- Install istanbul -->
    <target name="install_istanbul">
        <if>
            <equals arg1="${general.installNeededSoftware}" arg2="true" />
            <then>
                <exec executable="cmd" osfamily="windows" failonerror="true">
                    <arg line="/c npm install --prefix ${TOOLS-DIR} istanbul" />
                </exec>
                <exec executable="bash" osfamily="unix" failonerror="true">
                    <arg line="-c" />
                    <arg value="npm install --prefix ${TOOLS-DIR} istanbul"/>
                </exec>
            </then>
            <else>
                <echo level="info" message="Install of software disabled from config, will use manual install of ISTANBUL" />
            </else>
        </if>
    </target>

</project>
