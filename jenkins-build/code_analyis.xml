<project>
    <target name="generate_code_analysis_reports">
        <if>
            <isfalse value="${CODE.ANALYSIS.ENABLED}"/>
            <then>
                <echo level="info" message="Code Analysis Reporting disabled" />
            </then>
            <else>
                <script language="javascript"><![CDATA[
                    var list = project.getProperty('CODE.ANALYSIS.EXCLUDE.LIST');
                    var excludeRegexString = '\\\\bmedias\\\\b';
                    if (list) {
                        excludeRegexString += '|\\\\b' + list.replace(/\s*,\s*/g, '\\\\b|\\\\b') + '\\\\b';
                    }
                    project.setProperty('CODE.ANALYSIS.EXCLUDE.REGEX', excludeRegexString);

                    var inputDir = project.getProperty('CODE.ANALYSIS.INPUT.DIR');
                    if (!inputDir && inputDir.charAt(0) != '#') {
                        project.setProperty('CODE.ANALYSIS.INPUT.DIR', project.getProperty('SERVOY.SOLUTION_UNDER_TESTING'));
                    }
                ]]></script>
                <echo level="info" message="plato exclude regex=${CODE.ANALYSIS.EXCLUDE.REGEX}" />
                <make-clean-dir dir="${CODE.ANALYSIS.REPORT.DIR}" />
                <antcall target="execute_plato_for_code_analysis" />
            </else>
        </if>
    </target>

    <!-- create a code analysis report using plato-->
    <target name="execute_plato_for_code_analysis">
        <echo level="verbose" message="code analysis of ${CODE.ANALYSIS.INPUT.DIR} into output dir ${CODE.ANALYSIS.REPORT.DIR}"/>
        <condition property="CODE.ANALYSIS.SETTINGS.LINTER-OPTION" value="--jshint" else="--eslint">
            <equals arg1="${CODE.ANALYSIS.LINTER}" arg2="jshint" />
        </condition>
        <condition property="CODE.ANALYSIS.SETTINGS.LINTER-OPTION.VALUE" value="${CODE.ANALYSIS.SETTINGS.JSHINT}" else="${CODE.ANALYSIS.SETTINGS.ESLINT}">
            <equals arg1="${CODE.ANALYSIS.LINTER}" arg2="jshint" />
        </condition>
        <exec executable="plato${OS.NODE.EXTENTION}" dir="${WORKSPACE}" failonerror="true">
            <arg value="--recurse" />
            <arg value="--dir"/>
            <arg value="${CODE.ANALYSIS.REPORT.DIR}"/>
            <arg value="--exclude"/>
            <arg value='"${CODE.ANALYSIS.EXCLUDE.REGEX}"'/>
            <!-- Fix this by checking if the file is realy there
            <arg line="${CODE.ANALYSIS.SETTINGS.LINTER-OPTION}"/>
            <arg line='${CODE.ANALYSIS.SETTINGS.LINTER-OPTION.VALUE}'/> -->
            <arg value="${CODE.ANALYSIS.INPUT.DIR}"/>
        </exec>
    </target>
</project>
