<?xml version="1.0"?>

<!-- Works with Ant 1.7.0 and higher -->
<project basedir=".">
    <target name="generate_code_analysis_reports">
        <if>
            <not>
                <equals arg1="${CODE.ANALYSIS.ENABLED}" arg2="true" />
            </not>
            <then>
                <echo level="info" message="Code Analysis Reporting disabled" />
            </then>
            <else>
                <script language="javascript"><![CDATA[
                    var list = project.getProperty('code.analysis.exclude.list');
                    var excludeRegexString = '\\\\bmedias\\\\b';
                    if (list) {
                        excludeRegexString += '|\\\\b' + list.replace(/\s*,\s*/g, '\\\\b|\\\\b') + '\\\\b';
                    }
                    project.setProperty('CODE.ANALYSIS.EXCLUDE.REGEX', excludeRegexString);

                    var inputDir = project.getProperty('CODE.ANALYSIS.INPUT.DIR');
                    if (!inputDir && inputDir.charAt(0) != '#') {
                        project.setProperty('CODE.ANALYSIS.INPUT.DIR', project.getProperty('SERVOY.SOLUTION_UNDER_TESTING'));
                    }
                ]]></script>
                <echo level="verbose" message="plato exclude regex=${CODE.ANALYSIS.EXCLUDE.REGEX}" />
                <make-clean-dir dir="${CODE.ANALYSIS.REPORT.DIR}" />
                <antcall target="execute_plato_for_code_analysis" />
            </else>
        </if>
    </target>

    <!-- create a code analysis report using plato-->
    <target name="execute_plato_for_code_analysis" depends="install_plato">
        <echo level="verbose" message="code analysis of ${CODE.ANALYSIS.INPUT.DIR} into output dir ${CODE.ANALYSIS.REPORT.DIR}"/>

        <condition property="CODE.ANALYSIS.SETTINGS.LINTER-OPTION" value="--jshint" else="--eslint">
            <equals arg1="${CODE.ANALYSIS.LINTER}" arg2="jshint" />
        </condition>
        <condition property="CODE.ANALYSIS.SETTINGS.LINTER-OPTION.VALUE" value="${CODE.ANALYSIS.SETTINGS.JSHINT}" else="${CODE.ANALYSIS.SETTINGS.ESLINT}">
            <equals arg1="${CODE.ANALYSIS.LINTER}" arg2="jshint" />
        </condition>

        <exec executable="plato.cmd" dir="${WORKSPACE}" osfamily="windows" failonerror="true">
            <arg value="--recurse"/>
            <arg value="--dir"/>
            <arg value="${CODE.ANALYSIS.REPORT.DIR}"/>
            <arg value="--exclude"/>
            <arg value='"${CODE.ANALYSIS.EXCLUDE.REGEX}"'/>
            <arg value="${CODE.ANALYSIS.SETTINGS.LINTER-OPTION}"/>
            <arg value='${CODE.ANALYSIS.SETTINGS.LINTER-OPTION.VALUE}'/>
            <arg value="${CODE.ANALYSIS.INPUT.DIR}"/>
        </exec>
        <exec executable="plato" dir="${WORKSPACE}" osfamily="unix" failonerror="true">
            <arg value="--recurse"/>
            <arg value="--dir"/>
            <arg value="${CODE.ANALYSIS.REPORT.DIR}"/>
            <arg value="--exclude"/>
            <arg value='"${CODE.ANALYSIS.EXCLUDE.REGEX}"'/>
            <arg value="${CODE.ANALYSIS.SETTINGS.LINTER-OPTION}"/>
            <arg value='${CODE.ANALYSIS.SETTINGS.LINTER-OPTION.VALUE}'/>
            <arg value="${CODE.ANALYSIS.INPUT.DIR}"/>
        </exec>
    </target>

    <!-- Install istanbul -->
    <target name="install_plato">
        <if>
            <equals arg1="${INSTALL_SOFTWARE_FROM_SCRIPT}" arg2="true" />
            <then>
                <exec executable="cmd" osfamily="windows" failonerror="true">
                    <arg line="/c npm install --prefix ${TOOLS-DIR} plato" />
                </exec>
                <exec executable="bash" osfamily="unix" failonerror="true">
                    <arg line="-c" />
                    <arg value="npm install --prefix ${TOOLS-DIR} plato"/>
                </exec>
            </then>
            <else>
                <echo level="info" message="Install of software disabled from config, will use manual install of PLATO" />
            </else>
        </if>
    </target>

</project>
